(<bc>sym <bc>int)
(<bc>int 1)
(<bc>lit-nil)
(<bc>cons)
(<bc>cons)

(<bc>sym <bc>halt)
(<bc>lit-nil)
(<bc>cons)
(<bc>lit-nil)
(<bc>cons)

(<bc>cons)

(<bc>do-executor <impl>assemble)
(<bc>lit-nil)
(<bc>enclose)
(<bc>k-closure 0
  (<bc>halt))
(<bc>apply 2)

;^1$

; ***

(<bc>sym <bc>closure-ref)
(<bc>int 0)
(<bc>lit-nil)
(<bc>cons)
(<bc>cons)

(<bc>sym <bc>halt)
(<bc>lit-nil)
(<bc>cons)
(<bc>lit-nil)
(<bc>cons)

(<bc>cons)

(<bc>do-executor <impl>assemble)
(<bc>int 23)
(<bc>lit-nil)
(<bc>cons)
(<bc>enclose)
(<bc>k-closure 0
  (<bc>halt))
(<bc>apply 2)

;^23$

; *** disclose

(<bc>lit-t)
(<bc>closure 1
  (<bc>halt))
(<bc>disclose)
(<bc>halt)

;^\(#<<hl>bytecode> t\)$

; *** disclose (order of enclosed vars)

(<bc>int 7)
(<bc>lit-t)
(<bc>closure 2
  (<bc>halt))
(<bc>disclose)
(<bc>halt)

;^\(#<<hl>bytecode> 7 t\)$

; *** disclose (no enclosed vars)

(<bc>closure 0
  (<bc>halt))
(<bc>disclose)
(<bc>halt)

;^\(#<<hl>bytecode>\)$
