(int 9)
(halt )

;^9$

; *** Some consing ***

(int 1)
(int 2)
(cons )
(cdr )
(halt )

;^2$

; *******

(int 1)
(int 2)
(cons )
(car )
(halt )

;^1$

; *** Basic closure ***

(closure 0 
  (check-vars 2)
  (car-local-push 1)
  (halt ))
(int 1)
(int 2)
(cons )
(apply 2)

;^1$

; *** if ***

(closure 0 
  (check-vars 2)
  (if-local 1
    (cdr-local-push 1)
    (halt ))
  (halt ))
(int 1)
(int 2)
(cons )
(apply 2)

;^2$

; ******

(closure 0 
  (check-vars 2)
  (if-local 1
    (cdr-local-push 1)
    (halt ))
  (int 42)
  (halt ))
(lit-nil )
(apply 2)

;^42$

; *** Closures that close something ***

(int 42)
(closure 1
  (check-vars 1)
  (closure-ref 0)
  (halt ))
(apply 1)

;^42$

; ***

(int 1)
(lit-nil )
(cons )
(int 2)
(closure 2
  (check-vars 1)
  (closure-ref 0)
  (car )
  (halt ))
(apply 1)

;^1$

; *** apply-invert-k

(closure 0
  (check-vars 3)
  (local 1)
  (local 2)
  (apply 2))
(lit-nil )
(int 42)
(closure 0
  (check-vars 2)
  (local 1)
  (halt ))
(apply-invert-k 3)

;^42$

; *** apply-list

(closure 0
  (check-vars 5)
  (local 1)
  (local 3)
  (apply 2))
(closure 0
  (check-vars 2)
  (local 1)
  (halt ))
(int 1)
(int 2)
(int 3)
(lit-nil )
(cons )
(cons )
(cons )
(apply-list )

;^2$

; *** continue

(closure 0
  (check-vars 3)
  (car-local-push 2)
  (continue ))
(closure 0
  (check-vars 2)
  (local 1)
  (halt ))
(int 42)
(lit-nil )
(cons )
(apply 3)

;^42$

; *** continue-local

(closure 0
  (check-vars 4)
  (continue-local 3))
(closure 0
  (check-vars 2)
  (local 1)
  (halt ))
(int 19)
(int 42)
(apply 4)

;^42$

; *** continue-on-clos

(closure 0
  (check-vars 2)
  (local 1)
  (halt ))
(closure 1
  (check-vars 2)
  (local 1)
  (continue-on-clos 0))
(int 42)
(apply 2)

;^42$
