
(in-package impl)
(import <hl>def def)
(import <axiom>lambda fn)
(import <axiom>if if)
(import <axiom>tag tag)
(import <axiom>set =)
(import <axiom>car car)
(import <axiom>cdr cdr)
(import <axiom>cons cons)

(def (<hl>err-throw e h)
  ((<axiom>err-handler) e h))

(def (<common>debug-backtrace)
  ; this axiom is not part of the specifications
  (<axiom>debug-backtrace))

(def (<hl>err tp . rest)
  ((fn (h)
     (<hl>err-throw
       (if rest
           (tag tp
                rest)
           tp)
       h))
    (<common>debug-backtrace)))

(def (<hl>on-err ef bf)
  ((fn (real-k errval)
     (<hl>ccc
       (fn (k)
         (= real-k k)))
     (if errval
         (ef (car errval) (cdr errval))
         ((fn (old-err)
            (<hl>dynamic-wind
              (fn ()
                (<axiom>err-handler-set
                  (fn (e h)
                    (= errval (cons e h))
                    (real-k t))))
              bf
              (fn ()
                (<axiom>err-handler-set
                  old-err))))
          (<axiom>err-handler))))
   nil nil))

